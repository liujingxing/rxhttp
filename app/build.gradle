plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
//    id 'com.google.devtools.ksp' version "$ksp_version"
    // id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.10'
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.example.rxhttp"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    applicationVariants.all { variant ->
        sourceSets {
            def name = variant.name
            getByName(name) {  //告知IDE，ksp生成的kotlin代码
                kotlin.srcDir("build/generated/ksp/$name/kotlin")
            }
        }
    }
}

//ksp {
//    arg("rxhttp_rxjava", rxjava_version)
////        arg("rxhttp_package", "rxhttp")
//}

kapt {
    arguments {
        arg("rxhttp_rxjava", rxjava_version) //可传入rxjava2、rxjava3或具体版本号，如 3.1.1
//            arg("rxhttp_package", "rxhttp") //设置RxHttp相关类的包名，多module依赖时，需要配置不同的包名
    }
}


//configurations.all {
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.github.hackware1993:MagicIndicator:1.7.0'
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    implementation project(":rxhttp")
//    ksp project(':rxhttp-compiler')
    kapt project(':rxhttp-compiler')
//    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

//    implementation "com.github.liujingxing.rxhttp:rxhttp:$rxhttp_version"
//    ksp "com.github.liujingxing.rxhttp:rxhttp-compiler:$rxhttp_version"
//    kapt "com.github.liujingxing.rxhttp:rxhttp-compiler:$rxhttp_version"

    //管理RxJava及生命周期，Activity/Fragment 销毁，自动关闭未完成的请求
    implementation "com.github.liujingxing.rxlife:rxlife-rxjava3:$rxlife_version"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"

//    implementation "com.github.liujingxing.rxhttp:converter-serialization:$rxhttp_version"
//    implementation "com.github.liujingxing.rxhttp:converter-fastjson:$rxhttp_version"
//    implementation "com.github.liujingxing.rxhttp:converter-jackson:$rxhttp_version"
//    implementation "com.github.liujingxing.rxhttp:converter-moshi:$rxhttp_version"
//    implementation "com.github.liujingxing.rxhttp:converter-protobuf:$rxhttp_version"
//    implementation "com.github.liujingxing.rxhttp:converter-simplexml:$rxhttp_version"

    implementation project(':rxhttp-converter:converter-serialization')
    implementation project(':rxhttp-converter:converter-fastjson')
    implementation project(':rxhttp-converter:converter-simplexml')
    implementation project(':rxhttp-converter:converter-protobuf')
    implementation project(':rxhttp-converter:converter-moshi')
    implementation project(':rxhttp-converter:converter-jackson')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.blankj:utilcodex:1.31.0'
}
